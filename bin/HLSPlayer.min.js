
var HLSPlayer=(function(){var remuxWorkerURL=URL.createObjectURL(new Blob(['('+function(){var parseSPS=(function(){"use strict";function Bitstream(view){this.view=view;this.bitoffset=0;}
Bitstream.prototype.ExpGolomb=function(){var byt,bit=0,byteoffset=this.bitoffset>>3,skip=this.bitoffset&7,code=1,zeros=-1;byt=this.view.getUint8(byteoffset)<<skip;do{bit=byt&0x80;byt<<=1;zeros++;skip++;if(skip===8){skip=0;byteoffset++;byt=this.view.getUint8(byteoffset);}}while(!bit);while(zeros>0){code=(code<<1)|((byt&0x80)>>>7);byt<<=1;skip++;zeros--;if(skip===8){skip=0;byteoffset++;byt=this.view.getUint8(byteoffset);}}
this.bitoffset=(byteoffset<<3)|skip;return code-1;};Bitstream.prototype.SkipExpGolomb=function(){var byt,bit=0,byteoffset=this.bitoffset>>3,skip=this.bitoffset&7,zeros=-1;byt=this.view.getUint8(byteoffset)<<skip;do{bit=byt&0x80;byt<<=1;zeros++;skip++;if(skip===8){skip=0;byteoffset++;byt=this.view.getUint8(byteoffset);}}while(!bit);this.bitoffset=(byteoffset<<3)+skip+zeros;};Bitstream.prototype.SignedExpGolomb=function(){var code=this.ExpGolomb();return code&1?(code+1)>>>1:-(code>>>1);};Bitstream.prototype.readBit=function(){var bit,skip=this.bitoffset&7,byteoffset=this.bitoffset>>3;bit=(this.view.getUint8(byteoffset)>>(7-skip))&1;this.bitoffset++;return bit;};function scaling_list(stream,sizeOfScalingList){var j,deltaScale,lastScale=8,nextScale=8;for(j=0;j<sizeOfScalingList;j++){if(nextScale!==0){deltaScale=stream.SignedExpGolomb();nextScale=(lastScale+deltaScale+256)%256;}
if(nextScale){lastScale=nextScale;}}}
return function parseSPS(nal){var i,stream=new Bitstream(new DataView(nal.buffer,nal.byteOffset+4)),profile_idc,level_idc,profile_compatibility,pic_width_in_mbs_minus1,pic_height_in_map_units_minus1,chroma_format_idc,pic_order_cnt_type,num_ref_frames_in_pic_order_cnt_cycle,frame_mbs_only_flag,frame_cropping_flag,left_offset=0,right_offset=0,top_offset=0,bottom_offset=0;profile_idc=nal[1];profile_compatibility=nal[2];level_idc=nal[3];stream.SkipExpGolomb();if(profile_idc===100||profile_idc===110||profile_idc===122||profile_idc===244||profile_idc===44||profile_idc===83||profile_idc===86||profile_idc===118||profile_idc===128){chroma_format_idc=stream.ExpGolomb();if(chroma_format_idc===3){stream.bitoffset++;}
stream.SkipExpGolomb();stream.SkipExpGolomb();stream.bitoffset++;if(stream.readBit()){for(i=0;i<6;i++){if(stream.readBit()){scaling_list(stream,16);}}
for(0;i<((chroma_format_idc!==3)?8:12);i++){if(stream.readBit()){scaling_list(stream,64);}}}}
stream.SkipExpGolomb();pic_order_cnt_type=stream.ExpGolomb();if(pic_order_cnt_type===0){stream.ExpGolomb();}else if(pic_order_cnt_type===1){stream.bitoffset++;stream.SkipExpGolomb();stream.SkipExpGolomb();num_ref_frames_in_pic_order_cnt_cycle=stream.ExpGolomb();for(i=0;i<num_ref_frames_in_pic_order_cnt_cycle;i++){stream.ExpGolomb();}}
stream.SkipExpGolomb();stream.bitoffset++;pic_width_in_mbs_minus1=stream.ExpGolomb();pic_height_in_map_units_minus1=stream.ExpGolomb();frame_mbs_only_flag=stream.readBit();if(!frame_mbs_only_flag){stream.bitoffset++;}
stream.bitoffset++;frame_cropping_flag=stream.readBit();if(frame_cropping_flag){left_offset=stream.ExpGolomb();right_offset=stream.ExpGolomb();top_offset=stream.ExpGolomb();bottom_offset=stream.ExpGolomb();}
return{profile_idc:profile_idc,level_idc:level_idc,profile_compatibility:profile_compatibility,frame_mbs_only_flag:frame_mbs_only_flag,pic_width_in_mbs:pic_width_in_mbs_minus1+1,pic_height_in_map_units:pic_height_in_map_units_minus1+1,frame_cropping_flag:frame_cropping_flag,frame_cropping:{left:left_offset,right:right_offset,top:top_offset,bottom:bottom_offset}};};}());function add_atom(atom,sub_atom){'use strict';atom.size+=sub_atom.size;atom.box.push.apply(atom.box,sub_atom.box);}
function ftyp(){'use strict';var buffer=new ArrayBuffer(32),view=new DataView(buffer);view.setUint32(0,32);view.setUint32(4,0x66747970);view.setUint32(8,0x69736f6d);view.setUint32(12,512);view.setUint32(16,0x69736f6d);view.setUint32(20,0x69736f32);view.setUint32(24,0x61766331);view.setUint32(28,0x6d703431);return{size:32,box:[buffer]};}
function mdat(tracks){'use strict';var datas=tracks.map(function(track){return track.data;}),length=datas.reduce(function(p,n){return p+n.byteLength;},8),buffer=new ArrayBuffer(8),view=new DataView(buffer);view.setUint32(0,length);view.setUint32(4,0x6d646174);return{size:length,box:[buffer].concat(datas)};}
function hdlr(trkdata){'use strict';var buffer=new ArrayBuffer(45),view=new DataView(buffer);view.setUint32(0,45);view.setUint32(4,0x68646c72);if(trkdata.type==='v'){view.setUint32(16,0x76696465);view.setUint32(32,0x56696465);view.setUint32(36,0x6f48616e);}else{view.setUint32(16,0x736f756e);view.setUint32(32,0x536f756e);view.setUint32(36,0x6448616e);}
view.setUint32(40,0x646c6572);return{size:45,box:[buffer]};}
function vmhd(){'use strict';var buffer=new ArrayBuffer(20),view=new DataView(buffer);view.setUint32(0,20);view.setUint32(4,0x766d6864);view.setUint32(8,1);return{size:20,box:[buffer]};}
function smhd(){'use strict';var buffer=new ArrayBuffer(16),view=new DataView(buffer);view.setUint32(0,16);view.setUint32(4,0x736d6864);return{size:16,box:[buffer]};}
function dinf(){'use strict';var buffer=new ArrayBuffer(37),view=new DataView(buffer);view.setUint32(0,37);view.setUint32(4,0x64696e66);view.setUint32(8,29);view.setUint32(12,0x64726566);view.setUint32(20,1);view.setUint32(24,13);view.setUint32(28,0x75726c20);view.setUint32(32,1);return{size:37,box:[buffer]};}
function stts(dts_diffs){'use strict';var i,j,c=dts_diffs.length,l=c*8+16,buffer=new ArrayBuffer(l),view=new DataView(buffer);view.setUint32(0,l);view.setUint32(4,0x73747473);view.setUint32(12,c);for(i=0,j=16;i<c;i++,j+=8){view.setUint32(j,dts_diffs[i].sample_count);view.setUint32(j+4,dts_diffs[i].sample_delta);}
return{size:l,box:[buffer]};}
function ctts(pd_diffs){'use strict';var i,j,c=pd_diffs.length,l=c*8+16,buffer=new ArrayBuffer(l),view=new DataView(buffer);view.setUint32(0,l);view.setUint32(4,0x63747473);view.setUint32(12,c);for(i=0,j=16;i<c;i++,j+=8){view.setUint32(j,pd_diffs[i].sample_count);view.setUint32(j+4,pd_diffs[i].sample_offset);}
return{size:l,box:[buffer]};}
function stss(indices){'use strict';var i,j,c=indices.length,l=c*4+16,buffer=new ArrayBuffer(l),view=new DataView(buffer);view.setUint32(0,l);view.setUint32(4,0x73747373);view.setUint32(12,c);for(i=0,j=16;i<c;i++,j+=4){view.setUint32(j,indices[i]);}
return{size:l,box:[buffer]};}
function stsz(sizes){'use strict';var i,j,c=sizes.length,l=c*4+20,buffer=new ArrayBuffer(l),view=new DataView(buffer);view.setUint32(0,l);view.setUint32(4,0x7374737a);view.setUint32(16,c);for(i=0,j=20;i<c;i++,j+=4){view.setUint32(j,sizes[i]);}
return{size:l,box:[buffer]};}
function stsc(samples){'use strict';var buffer=new ArrayBuffer(28),view=new DataView(buffer);view.setUint32(0,28);view.setUint32(4,0x73747363);view.setUint32(12,1);view.setUint32(16,1);view.setUint32(20,samples);view.setUint32(24,1);return{size:28,box:[buffer]};}
function stco(offset){'use strict';var buffer=new ArrayBuffer(20),view=new DataView(buffer);view.setUint32(0,20);view.setUint32(4,0x7374636f);view.setUint32(12,1);view.setUint32(16,offset);return{size:20,box:[buffer]};}
function avcC(trkdata){'use strict';var i,j,sps=trkdata.sps,pps=trkdata.pps,spslen=sps.byteLength,ppslen=pps.byteLength,len=spslen+ppslen+19,spsInfo=trkdata.spsInfo,buffer=new ArrayBuffer(len),view=new DataView(buffer);view.setUint32(0,len);view.setUint32(4,0x61766343);view.setUint8(8,1);view.setUint8(9,spsInfo.profile_idc);view.setUint8(10,spsInfo.profile_compatibility);view.setUint8(11,spsInfo.level_idc);view.setUint8(12,0xff);view.setUint8(13,0xe1);view.setUint16(14,spslen);for(i=0,j=16;i<spslen;i++,j++){view.setUint8(j,sps[i]);}
view.setUint8(16+spslen,1);view.setUint16(17+spslen,ppslen);for(i=0,j=19+spslen;i<ppslen;i++,j++){view.setUint8(j,pps[i]);}
return{size:len,box:[buffer]};}
function avc1(trkdata){'use strict';var buffer=new ArrayBuffer(86),view=new DataView(buffer),atom={size:86,box:[buffer]};view.setUint32(4,0x61766331);view.setUint16(14,1);view.setUint16(32,trkdata.width);view.setUint16(34,trkdata.height);view.setUint32(36,0x00480000);view.setUint32(40,0x00480000);view.setUint16(48,1);view.setUint16(82,24);view.setInt16(84,-1);add_atom(atom,avcC(trkdata));view.setUint32(0,atom.size);return atom;}
function esds(trkdata){'use strict';var buffer=new ArrayBuffer(51),view=new DataView(buffer),freqIndex=trkdata.samplingFreqIndex,objectType=trkdata.profileMinusOne+1,channelConf=trkdata.channelConfig;view.setUint32(0,51);view.setUint32(4,0x65736473);view.setUint32(12,0x03808080);view.setUint32(16,0x22000200);view.setUint32(20,0x04808080);view.setUint32(24,0x14401500);view.setUint32(30,trkdata.maxBitrate);view.setUint32(34,trkdata.avgBitrate);view.setUint32(38,0x05808080);view.setUint8(42,2);view.setUint16(43,(objectType<<11)|(freqIndex<<7)|(channelConf<<3));view.setUint32(45,0x06808080);view.setUint16(49,0x0102);return{size:51,box:[buffer]};}
function mp4a(trkdata){'use strict';var buffer=new ArrayBuffer(36),view=new DataView(buffer),atom={size:36,box:[buffer]};view.setUint32(4,0x6d703461);view.setUint16(14,1);view.setUint16(24,2);view.setUint16(26,16);view.setUint32(32,22050<<16);add_atom(atom,esds(trkdata));view.setUint32(0,atom.size);return atom;}
function stsd(trkdata){'use strict';var buffer=new ArrayBuffer(16),view=new DataView(buffer),atom={size:16,box:[buffer]};view.setUint32(4,0x73747364);view.setUint32(12,1);add_atom(atom,(trkdata.type==='v'?avc1:mp4a)(trkdata));view.setUint32(0,atom.size);return atom;}
function stbl(trkdata){'use strict';var buffer=new ArrayBuffer(8),view=new DataView(buffer),atom={size:8,box:[buffer]};view.setUint32(4,0x7374626c);add_atom(atom,stsd(trkdata));add_atom(atom,stts(trkdata.dts_diffs));add_atom(atom,stsc(trkdata.sizes.length));add_atom(atom,stsz(trkdata.sizes));add_atom(atom,stco(trkdata.byte_offset));if(trkdata.type==='v'){add_atom(atom,stss(trkdata.access_indices));if(trkdata.pd_diffs.length){add_atom(atom,ctts(trkdata.pd_diffs));}}
view.setUint32(0,atom.size);return atom;}
function minf(trkdata){'use strict';var buffer=new ArrayBuffer(8),view=new DataView(buffer),atom={size:8,box:[buffer]};view.setUint32(4,0x6d696e66);add_atom(atom,(trkdata.type==='v'?vmhd:smhd)());add_atom(atom,dinf());add_atom(atom,stbl(trkdata));view.setUint32(0,atom.size);return atom;}
function mdia(trkdata){'use strict';var buffer=new ArrayBuffer(40),view=new DataView(buffer),atom={size:40,box:[buffer]};view.setUint32(4,0x6d646961);view.setUint32(8,32);view.setUint32(12,0x6d646864);view.setUint32(28,90000);view.setUint32(32,trkdata.duration);view.setUint32(36,0x15c70000);add_atom(atom,hdlr(trkdata));add_atom(atom,minf(trkdata));view.setUint32(0,atom.size);return atom;}
function trak(id,trkdata){'use strict';var buffer=new ArrayBuffer(100),view=new DataView(buffer),atom={size:100,box:[buffer]};view.setUint32(4,0x7472616b);view.setUint32(8,92);view.setUint32(12,0x746b6864);view.setUint32(16,15);view.setUint32(28,id);view.setUint32(36,trkdata.duration);view.setUint32(48,trkdata.type=='v'?0:0x01000000);view.setUint32(52,0x01000000);view.setUint32(68,0x00010000);view.setUint32(88,0x40000000);view.setUint32(92,(trkdata.width&0xffff)<<16);view.setUint32(96,(trkdata.height&0xffff)<<16);add_atom(atom,mdia(trkdata));view.setUint32(0,atom.size);return atom;}
function moov(tracks){'use strict';var d,buffer=new ArrayBuffer(116),view=new DataView(buffer),atom={size:116,box:[buffer]};d=Math.max.apply(Math,tracks.map(function(trkdata){return trkdata.duration;}));view.setUint32(4,0x6d6f6f76);view.setUint32(8,108);view.setUint32(12,0x6d766864);view.setUint32(28,90000);view.setUint32(32,d);view.setUint32(36,0x00010000);view.setUint32(40,0x01000000);view.setUint32(52,0x00010000);view.setUint32(68,0x00010000);view.setUint32(84,0x40000000);view.setUint32(112,tracks.length);tracks.forEach(function(trkdata,i){add_atom(atom,trak(i+1,trkdata));});view.setUint32(0,atom.size);return atom;}
function MP4(tracks){'use strict';var offset,atom={size:0,box:[]};add_atom(atom,ftyp());offset=atom.size+8;tracks.forEach(function(track){track.byte_offset=offset;offset+=track.data.byteLength;});add_atom(atom,mdat(tracks));add_atom(atom,moov(tracks));return new Blob(atom.box,{type:'video/mp4'});}
function parseNALStream(bytes){'use strict';var view=new DataView(bytes.buffer,bytes.byteOffset),len=bytes.byteLength-3,start,end=1,nalUnits=[];do{end+=view.getUint16(end+1)?3:4;for(start=end;end<len;end++){if(view.getUint16(end)===0&&(bytes[end+2]===1||(view.getUint16(end+2)===1))){nalUnits.push(bytes.subarray(start,end));break;}}}while(end<len);nalUnits.push(bytes.subarray(start));return nalUnits;}
function mergeDeltas(deltas,frame_rate){'use strict';var last_delta=-1,dts_diffs=[],current;deltas.forEach(function(delta){if(delta!==last_delta){current={sample_count:1,sample_delta:delta};dts_diffs.push(current);last_delta=delta;}else{current.sample_count++;}});return dts_diffs;}
function calcPDDiffs(samples){'use strict';var current,last_offset=1/0,pd_diffs=[];samples.forEach(function(s,i){var s_offset=s.pts-s.dts;if(s_offset===last_offset){current.sample_count++;}else if(s_offset===0){last_offset=1/0;}else{last_offset=s_offset;current={first_chunk:i+1,sample_count:1,sample_offset:s_offset};pd_diffs.push(current);}});return pd_diffs;}
function mergeNALUs(nalus,length){'use strict';var arr=new Uint8Array(length),view=new DataView(arr.buffer),unit,offset,i;for(i=0,offset=0;offset<length;i++){unit=nalus[i];view.setUint32(offset,unit.byteLength);arr.set(unit,offset+4);offset+=unit.byteLength+4;}
return arr;}
function video_data(stream){'use strict';var packets=stream.packets,pps,sps,spsInfo,cropping,dts_delta,size,isIDR,samples=[],nalus=[],sizes=[],dts_deltas=[],packet=packets[0],offset=0,duration=0,zeroes=0,frame_sum=0,frame_count=0,frame_rate,next,len,i;for(i=1,len=packets.length;i<=len;i++){next=packets[i]||{offset:offset,dts:packet.dts};size=0;isIDR=false;parseNALStream(packet.data).forEach(function(nalUnit){switch(nalUnit[0]&0x1F){case 7:sps=nalUnit;break;case 8:pps=nalUnit;break;case 5:isIDR=true;default:size+=nalUnit.length+4;nalus.push(nalUnit);}});sizes.push(size);samples.push({offset:offset,pts:packet.pts,dts:packet.dts,isIDR:isIDR});dts_delta=next.dts-packet.dts;dts_deltas.push(dts_delta);if(dts_delta){duration+=dts_delta;frame_sum+=dts_delta;frame_count++;}else{zeroes++;}
offset+=size;packet=next;}
frame_rate=Math.round(frame_sum/frame_count);duration+=zeroes*frame_rate;spsInfo=parseSPS(sps);cropping=spsInfo.frame_cropping;return{type:'v',pps:pps,sps:sps,spsInfo:spsInfo,width:(spsInfo.pic_width_in_mbs*16)
-(cropping.left+cropping.right)*2,height:(2-spsInfo.frame_mbs_only_flag)*(spsInfo.pic_height_in_map_units*16)
-(cropping.top+cropping.bottom)*2,sizes:sizes,dts_diffs:mergeDeltas(dts_deltas,frame_rate),access_indices:samples.map(function(s,i){return s.isIDR?i+1:-1;}).filter(function(i){return i!==-1;}),pd_diffs:calcPDDiffs(samples),duration:duration,data:mergeNALUs(nalus,offset)};}
function audio_data(stream,duration){'use strict';var audioSize=stream.byteLength,audioBuffer=new Uint8Array(audioSize),audioView=new DataView(audioBuffer.buffer),data_length,packet_length,header_length,header,frames,sizes=[],maxAudioSize=0,woffset=0,roffset=0;stream.packets.forEach(function(packet){audioBuffer.set(packet.data,woffset);woffset+=packet.data.byteLength;});header=audioView.getUint32(2);for(woffset=0;roffset<audioSize;){header_length=(audioView.getUint8(roffset+1)&1)?7:9;packet_length=(audioView.getUint32(roffset+2)>>5)&0x1fff;data_length=packet_length-header_length;audioBuffer.set(audioBuffer.subarray(roffset+header_length,roffset+packet_length),woffset);roffset+=packet_length;woffset+=data_length;sizes.push(data_length);if(maxAudioSize<data_length){maxAudioSize=data_length;}}
frames=sizes.length;return{type:'a',profileMinusOne:(header>>>30),channelConfig:(header>>22)&0x7,samplingFreqIndex:(header>>26)&0xf,maxAudioSize:maxAudioSize,maxBitrate:Math.round(maxAudioSize/(duration/90000/frames)),avgBitrate:Math.round(woffset/(duration/90000)),sizes:sizes,dts_diffs:[{sample_count:frames,sample_delta:Math.round(duration/frames)}],duration:duration,data:audioBuffer.subarray(0,woffset)};}
addEventListener('message',function(event){var msg=event.data,streams=msg.streams,tracks=[],video;video=video_data(streams[0xE0]);tracks.push(video);if(streams[0xC0]){tracks.push(audio_data(streams[0xC0],video.duration));}
postMessage({index:msg.index,url:URL.createObjectURL(MP4(tracks))});});}.toString()+')()'],{type:'text/javascript'}));var fetchHLSManifests=(function(){"use strict";var linePat=/^(#)?(EXT)?(.+?)$/mg,attrSeparator=/(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))/;var keyPromises={};function getKeyPromise(url){if(!keyPromises.hasOwnProperty(url)){keyPromises[url]=new Promise(function(resolve){var xhr=new XMLHttpRequest();xhr.responseType="arraybuffer";xhr.addEventListener('load',function(){resolve(this.response);},false);xhr.open("GET",url,true);xhr.send();});}
return keyPromises[url];}
function validateString(s){if(!(s&&s[0]==='"'&&s[s.length-1]==='"')){throw new Error("Expected Quoted String");}
s=s.substr(1,s.length-2);if(s.indexOf('"')!==-1){throw new Error("Invalid Quoted String");}
return s;}
function vaidateSignedFloat(s){var f=parseFloat(s);if(!isFinite(f)){throw new Error("Invalid Float");}
return f;}
function validateHex(s){return s;}
function validateKeyFormats(s){return s;}
function parseAttributes(line){var attrs={};line.split(attrSeparator).forEach(function(s){if(s===''){return;}
var p=s.split('=');attrs[p[0].trim()]=p[1].trim();});return attrs;}
function parseMaster(baseUrl,input){var match=linePat.exec(input),variants=[],settings={renditions:{AUDIO:{},VIDEO:{},SUBTITLES:{},'CLOSED-CAPTIONS':{},},};if(input[0]==='\uFEFF'){throw new Error("BOM detected");}
if(input.substr(0,7)!=="#EXTM3U"){throw new Error("Missing EXTM3U tag.");}
for(;match;match=linePat.exec(input)){if(match[1]){if(!match[2]){continue;}
parseTagMaster(match[3],settings,baseUrl);}else{variants.push(createVariant(baseUrl,match[0],settings));}}
return{settings:settings,variants:variants};}
function assert_master(settings){if(settings.list_type==="media"){throw new Error("Cannot use Master tags in Media Playlist");}else{settings.list_type="master";}}
function assert_quotedString(str){var lastIndex=str.length-1;if(str[0]!=='"'||str[lastIndex]!=='"'){var msg="'URI' attribute of a media tag must"
+" start and end with '\"'";throw new Error(msg);}}
function stripQuotes(str){var lastIndex=str.length-1;return str.substr(1,lastIndex-1);}
function parseTagMaster(line,settings,baseUrl){var match;match=/-X-VERSION:(\d+)/.exec(line);if(match){parseVersionTag(settings,match[1]);return;}
match=/-X-MEDIA:(.*)/.exec(line);if(match){parseMediaTag(settings,parseAttributes(match[1]));return;}
match=/-X-STREAM-INF:(.*)/.exec(line);if(match){parseStreamInfTag(settings,parseAttributes(match[1]));return;}
match=/-X-I-FRAME-STREAM-INF:(.*)/.exec(line);if(match){parseIFrameStreamTag(settings,parseAttributes(match[1]),baseUrl);return;}
match=/-X-SESSION-DATA:(.*)/.exec(line);if(match){parseSessionDataTag(settings,parseAttributes(match[1]));return;}
match=/-X-INDEPENDENT-SEGMENTS/.exec(line);if(match){parseIndependentSegmentsTag(settings);}
match=/-X-START:(.*)/.exec(line);if(match){parseStartTag(settings,parseAttributes(match[1]));}}
function parseMediaType(rendition,attrs){switch(attrs.TYPE){case void 0:throw new Error("Media tag must have a 'TYPE' attribute.");break;case'AUDIO':rendition.type='audio';break;case'VIDEO':rendition.type='VIDEO'
break;case'SUBTITLES':rendition.type='SUBTITLES';break;case'CLOSED-CAPTIONS':rendition.type='CLOSED-CAPTIONS';break;default:var msg="Invalid type attribute in media tag: '"
+attrs.TYPE+"' Valid types are 'AUDIO', "
+"'VIDEO', 'SUBTITLES', and 'CLOSED-CAPTIONS'";throw new Error(msg);}}
function parseMediaUriAttr(rendition,attrs){if(typeof attrs.URI==='undefined'){if(typeof attrs.TYPE!==undefined){if(attrs.TYPE==='SUBTITLES'){var msg="Media tags of type 'SUBTITLES' must have a 'URI' attribute.";throw new Error(msg);}}}
else{assert_quotedString(attrs.URI);if(attrs.TYPE){if(attrs.TYPE==='CLOSED-CAPTIONS'){var msg="Media tags of type 'CLOSED-CAPTIONS' must not"
+" have a 'URI' attribute.";throw new Error(msg);}}
rendition.uri=stripQuotes(attrs.URI);}}
function parseMediaGroupId(attrs){if(typeof attrs['GROUP-ID']==='undefined'){throw new Error("Media tag must have a 'GROUP-ID' attribute.");}
else{assert_quotedString(attrs['GROUP-ID']);console.log(attrs['GROUP-ID']);return stripQuotes(attrs['GROUP-ID']);}}
function parseMediaLanguage(rendition,attrs){if(typeof attrs.LANGUAGE!=='undefined'){assert_quotedString(attrs.LANGUAGE);rendition.language=stripQuotes(attrs.LANGUAGE);}}
function parseMediaAssocLanguage(rendition,attrs){if(typeof attrs['ASSOC-LANGUAGE']!=='undefined'){rendition.assocLanguage=stripQuotes(attrs['ASSOC-LANGUAGE']);}}
function parseMediaName(attrs){if(typeof attrs.NAME==='undefined'){throw new Error("Media tag must have a 'NAME' attribute.");}else{assert_quotedString(attrs.NAME);return stripQuotes(attrs.NAME);}}
function parseMediaDefault(rendition,attrs){switch(attrs.DEFAULT){case void 0,'NO':rendition.default=false;break;case'YES':rendition.default=true;break;default:var msg="Attribute 'DEFAULT' of media tag must be 'YES'"
+" or 'NO'. Value was '"+attrs.DEFAULT+"'.";throw new Error(msg);}}
function parseMediaAutoSelect(rendition,attrs){switch(attrs.AUTOSELECT){case void 0,'NO':if(rendition.default){var msg="Attribute 'AUTOSELECT' must have value 'YES'"
+" if it exists and attribute 'DEFAULT' has a value"
+" of 'YES'."}
else{rendition.autoSelect=false;}
break;case'YES':rendition.autoSelect=true;break;default:var msg="Attribute 'AUTOSELECT' of media tag must be"
+"'YES' or 'NO'. Value was '"+attrs.DEFAULT+"'.";throw new Error(msg);}}
function parseMediaForced(rendition,attrs){if(attrs.TYPE==='SUBTITLES'){switch(attrs.FORCED){case void 0,'NO':rendition.forced=false;break;case'YES':rendition.forced=true;break;default:var msg="Attribute 'FORCED' of media tag must be"
+"'YES' or 'NO'. Value was '"+attrs.DEFAULT+"'.";throw new Error(msg);}}else if(typeof attrs.FORCED!=='undefined'){var msg="'FORCED' attribute of media tag may only"
+" be present if 'TYPE' attribute has value of"
+" 'SUBTITLES'.";throw new Error(msg);}}
function parseMediaInstreamId(rendition,attrs){if(attrs.TYPE==='CLOSED-CAPTIONS'){assert_quotedString(attrs['INSTREAM-ID']);if(typeof attrs['INSTREAM-ID']==='undefined'){var msg="'INSTREAM-ID' attribute must be present"
+" in media tag when 'TYPE' attribute is"
+" 'CLOSED-CAPTIONS'.";throw new Error(msg);}
var L21RegExp=/"CC([1-4])"/;var L21Number=L21RegExp.exec(attrs['INSTREAM-ID'])[1];var DTCCRegExp=/"SERVICE([1-9]|[0-5]\d|6[0-3])"/;var DTCCNumber=DTCCRegExp.exec(attrs['INSTREAM-ID'])[1];var instream={};if(typeof L21Number!=='undefined'){instream.type='CC';instream.channel=parseInt(L21Number);rendition.instream=instream;}else if(typeof DTCCNumber!=='undefined'){instream.type='SERVICE';instream.blockNumber=DTCCNumber;rendition.instream=instream;}else{var msg="'INSTREAM-ID' attribute must be either"
+" 'CC' followed by a number between 1 and 4,"
+" or 'SERVICE' followed by a number between"
+" 1 and 63.";throw new Error(msg);}}else if(typeof attrs['INSTREAM-ID']!=='undefined'){var msg="'INSTREAM-ID' attribute of media tag may only"
+" be present if 'TYPE' attribute has value of"
+" 'CLOSED-CAPTIONS'.";throw new Error(msg);}}
function parseMediaCharacteristics(rendition,attrs){if(typeof attrs.CHARACTERISTICS!=='undefined'){assert_quotedString(attrs.CHARACTERISTICS);var quoteless=stripQuotes(attrs.CHARACTERISTICS);var characteristics=quoteless.split(/,\s*/);rendition.characteristics=characteristics;}}
function parseMediaTag(settings,attrs){assert_master(settings);var rendition={};var name=parseMediaName(attrs);var groupId=parseMediaGroupId(attrs);parseMediaType(rendition,attrs);parseMediaUri(rendition,attrs);parseMediaLanguage(rendition,attrs);parseMediaAssocLanguage(rendition,attrs);parseMediaDefault(rendition,attrs);parseMediaAutoSelect(rendition,attrs);parseMediaForced(rendition,attrs);parseMediaInstreamId(rendition,attrs);parseMediaCharacteristics(rendition,attrs);settings.groups[groupId]=settings.groups[groupId]||{};settings.groups[groupId][name]=rendition;}
function parseStreamInfBandwidth(settings,attrs){if(attrs.BANDWIDTH){settings.bandwidth=parseInt(attrs.BANDWIDTH);}
else{var msg="StreamInf tab must have"
+" 'BANDWIDTH' attribute";throw new Error(msg);}}
function parseStreamInfAverageBandwidth(settings,attrs){if(attrs['AVERAGE-BANDWIDTH']){settings.avgBandwidth=parseInt(attrs['AVERAGE-BANDWIDTH']);}}
function parseStreamInfCodecs(settings,attrs){if(attrs.CODECS){assert_quotedString(attrs.CODECS);var codecsStr=stripQuotes(attrs.CODECS);settings.codecs=codecsStr.split(',');}}
function parseStreamInfResolution(settings,attrs){if(attrs.RESOLUTION){var resArr=attrs.RESOLUTION.split('x');var resolution={width:resArr[0],height:resArr[0],}
settings.resolution=resolution;}}
function parseStreamInfAudio(settings,attrs){if(attrs.AUDIO){assert_quotedString(attrs.AUDIO);var audioStr=stripQuotes(attrs.AUDIO);var audio=settings.renditions[audioStr]||undefined;if(!audio||audio.type!=='AUDIO'){var msg="'AUDIO' attribute in streamInf tag"
+" must match the 'GROUP-ID' attribute of a"
+" media tag of type 'AUDIO'";}else{settings.audio=audio;}}}
function parseStreamInfVideo(settings,attrs){if(attrs.VIDEO){assert_quotedString(attrs.VIDEO);var videoStr=stripQuotes(attrs.VIDEO);var video=settings.renditions[videoStr]||undefined;if(!video||video.type!=='VIDEO'){var msg="'VIDEO' attribute in streamInf tag"
+" must match the 'GROUP-ID' attribute of a"
+" media tag of type 'VIDEO'";}else{settings.video=video;}}}
function parseStreamInfSubtitles(settings,attrs){if(attrs.SUBTITLES){assert_quotedString(attrs.SUBTITLES);var subtitlesStr=stripQuotes(attrs.SUBTITLES);var subs=settings.renditions[subtitlesStr]||undefined;if(!subs||subs.type!=='SUBTITLES'){var msg="'SUBTITLES' attribute in streamInf tag"
+" must match the 'GROUP-ID' attribute of a"
+" media tag of type 'SUBTITLES'";}else{settings.subtitles=subs;}}}
function parseStreamInfClosedCaptions(settings,attrs){if(attrs['CLOSED-CAPTIONS']){assert_quotedString(attrs['CLOSED-CAPTIONS']);var ccStr=stripQuotes(attrs['CLOSED-CAPTIONS']);var cc=settings.renditions[ccStr]||undefined;if(!cc||cc.type!=='CLOSED-CAPTIONS'){var msg="'CLOSED-CAPTIONS' attribute in streamInf tag"
+" must match the 'GROUP-ID' attribute of a"
+" media tag of type 'CLOSED-CAPTIONS'.";}else{settings.closedCaptions=cc;}}}
function parseStreamInfTag(settings,attrs){assert_master(settings);parseStreamInfBandwidth(settings,attrs);parseStreamInfAverageBandwidth(settings,attrs);parseStreamInfCodecs(settings,attrs);parseStreamInfResolution(settings,attrs);parseStreamInfAudio(settings,attrs);parseStreamInfVideo(settings,attrs);parseStreamInfSubtitles(settings,attrs);parseStreamInfClosedCaptions(settings,attrs);}
function parseIFrameStreamTag(settings,attrs,baseUrl){assert_master(settings);parseStreamInfBandwidth(settings);parseStreamInfAverageBandwidth(settings,attrs);parseStreamInfCodecs(settings,attrs);parseStreamInfResolution(settings,attrs);parseStreamInfVideo(settings,attrs);parseIFrameStreamUri(settings,attrs,baseUrl);createVariant(baseUrl,attrs.URI,settings);}
function parseSessionDataTag(settings,attrs){assert_quotedString(attrs['DATA-ID']);var key=stripQuotes(attrs['DATA-ID']);var value;if(attrs['VALUE']){value=stripQuotes(attrs['VALUE']);}else if(attrs['URI']){value=getJSONFromUrl(attrs['URI']);}
settings.session[key]={};settings.session[key].value=value;if(attrs['LANGUAGE']){var language=parseLanguage(attrs.LANGUAGE);settings.session[key].language=language;}}
function createVariant(baseUrl,line,settings){var variant={uri:resolveURL(baseUrl,line),bandwidth:settings.bandwidth,averageBandwidth:settings.avgBandwidth,codecs:settings.codecs,video:settings.video,audio:settings.audio,subtitles:settings.subtitles,closedCaptions:settings.closedCaptions,}
return variant;}
function parse(baseUrl,input){var match,segments=[],settings={list_type:"",encryption:{format:"identity",formatSettings:{"identity":{method:"NONE",key:"",iv:"",formatVersions:""}}},isFinished:false,hasMutability:false,mutability:"",mediaInit:null,dateTime:NaN,duration:0,hasSegments:false,hasTargetDuration:false,targetDuration:0,hasSequenceNo:false,sequenceNo:0,hasDiscontinuitySequence:false,discontinuitySequence:0,hasVersion:false,version:1,hasOffset:false,offset:0,hasRange:false,rangelen:0,lastByteRange:null,hasIndependent:false,independent:false,hasStart:false,startOffset:0,startPrecise:"NO"};if(input[0]==='\uFEFF'){throw new Error("BOM detected");}
if(input.substr(0,7)!=="#EXTM3U"){throw new Error("Missing EXTM3U tag.");}
linePat.lastIndex=7;match=linePat.exec(input);for(;match;match=linePat.exec(input)){if(match[1]){if(!match[2]){continue;}
parseTag(match[3],settings,baseUrl);}else{segments.push(createSegment(baseUrl,match[0],settings));}}
return{settings:settings,segments:Promise.all(segments)};}
function assert_media(settings){if(settings.list_type==="master"){throw new Error("Cannot use Media Segment tags in Master Playlist");}else{settings.list_type="media";}}
function parseTag(line,settings,baseUrl){var match;match=/INF:(\d+(\.\d+)?),.*/.exec(line);if(match){parseInfTag(settings,match);return;}
match=/-X-BYTERANGE:(\d+)(?:@(\d+))?$/.exec(line);if(match){parseByterangeTag(settings,match);return;}
match=/-X-DISCONTINUITY/.exec(line);if(match){parseDiscontinuityTag(settings);return;}
match=/-X-KEY:(.*)$/.exec(line);if(match){parseKeyTag(settings,parseAttributes(match[1]),baseUrl);return;}
match=/-X-MAP:(.*)/.exec(line);if(match){parseMapTag(settings,parseAttributes(match[1]));return;}
match=/-X-PROGRAM-DATE-TIME:(.*)/.exec(line);if(match){parseDateTimeTag(settings,match[1]);return;}
match=/-X-VERSION:(\d+)/.exec(line);if(match){parseVersionTag(settings,match[1]);return;}
match=/-X-TARGETDURATION:(\d+)/.exec(line);if(match){parseTargetDurationTag(settings,match[1]);return;}
match=/-X-MEDIA-SEQUENCE:(\d+)/.exec(line);if(match){parseMediaSequenceTag(settings,match[1]);return;}
match=/-X-DISCONTINUITY-SEQUENCE:(\d+)/.exec(line);if(match){parseDiscontinuitySequenceTag(settings,match[1]);return;}
match=/-X-PLAYLIST-TYPE:(.*)/.exec(line);if(match){parsePlaylistTypeTag(settings,match[1]);return;}
match=/-X-ENDLIST/.exec(line);if(match){parseEndlistTag(settings);}
match=/-X-INDEPENDENT-SEGMENTS/.exec(line);if(match){parseIndependentSegmentsTag(settings);return;}
match=/-X-START:(.*)/.exec(line);if(match){parseStartTag(settings,parseAttributes(match[1]));return;}}
function parseVersionTag(settings,num){if(settings.hasVersion){throw new Error("Duplicate X-VERSION tags.");}
if(settings.hasSegments){throw new Error("X-VERSION tag must preceded media segments.");}
settings.hasVersion=true;settings.version=parseInt(num,10);}
function parseTargetDurationTag(settings,num){assert_media(settings);if(settings.hasTargetDuration){throw new Error("Duplicate X-TARGETDURATION tags.");}
if(settings.hasSegments){throw new Error("X-TARGETDURATION tag must preceded media segments.");}
settings.hasTargetDuration=true;settings.targetDuration=parseInt(num,10);}
function parseMediaSequenceTag(settings,num){assert_media(settings);if(settings.hasSequenceNo){throw new Error("Duplicate X-MEDIA-SEQUENCE tags.");}
if(settings.hasSegments){throw new Error("X-MEDIA-SEQUENCE tag must preceded media segments.");}
settings.hasSequenceNo=true;settings.sequenceNo=parseInt(num,10);}
function parseDiscontinuitySequenceTag(settings,num){assert_media(settings);if(settings.hasDiscontinuitySequence){throw new Error("Duplicate X-DISCONTINUITY-SEQUENCE tags.");}
if(settings.hasSegments){throw new Error("X-DISCONTINUITY-SEQUENCE tag must preceded media segments.");}
if(settings.mutability!==""){throw new Error("EVENT or VOD playlist may not contain X-DISCONTINUITY-SEQUENCE tag.");}
settings.hasDiscontinuitySequence=true;settings.discontinuitySequence=parseInt(num,10);}
function parsePlaylistTypeTag(settings,type){assert_media(settings);if(settings.hasMutability){throw new Error("Duplicate X-PLAYLIST-TYPE tags.");}
if(settings.hasSegments){throw new Error("X-PLAYLIST-TYPE tag must preceded media segments.");}
settings.hasMutability=true;switch(type){case"VOD":case"EVENT":if(settings.hasDiscontinuitySequence){throw new Error("EVENT or VOD playlist may not contain X-DISCONTINUITY-SEQUENCE tag.");}
settings.mutability=type;break;default:throw new Error("Invalid Playlist Type");}}
function parseEndlistTag(settings){assert_media(settings);if(settings.isFinished){throw new Error("Duplicate X-ENDLIST tags.");}
settings.isFinished=true;}
function parseIFrameTag(settings){assert_media(settings);throw new Error("X-I-FRAMES-ONLY tag not supported.");}
function parseInfTag(settings,match){assert_media(settings);if(settings.version<3){if(match[2]){throw new Error("Invalid argument for EXTINF");}
settings.duration=parseInt(match[1],10);}else{settings.duration=parseFloat(match[1]);}}
function parseByterangeTag(settings,match){assert_media(settings);if(settings.version<4){throw new Error("X-BYTERANGE tag requires version 4 or greater.");}
settings.hasRange=true;settings.rangelen=parseInt(match[1],10);settings.hasOffset=!!match[2];if(settings.hasOffset){settings.offset=parseInt(match[2]);}}
function parseDiscontinuityTag(settings){assert_media(settings);settings.discontinuitySequence++;}
function parseMapTag(settings,attrs){assert_media(settings);throw new Error("X-MAP tag not supported.");}
function parseDateTimeTag(settings,date){assert_media(settings);throw new Error("X-PROGRAM-DATE-TIME tag not supported.");}
function parseKeyTag(settings,attrs,baseUrl){var key,iv,format,versions;assert_media(settings);switch(attrs.METHOD){case void 0:throw new Error("METHOD attribute missing from X-KEY tag.");case"NONE":if(Object.keys(attrs).length>1){throw new Error("Additional attributes disallowed for encryption method NONE.");}
settings.encryption.format="identity";encryption.formatSettings.identity={method:"NONE",key:"",iv:"",formatVersions:""};return;case"AES-128":if(attrs.URI===void 0){throw new Error("Missing Encryption Key URI.");}
var keyStr=validateString(attrs.URI);key=resolveURL(baseUrl,keyStr);if(attrs.IV==void 0){iv="";}else if(settings.version<2){throw new Error("IV attribute requires version 2 or greater.");}else{iv=validateHex(attrs.IV);}
if(attrs.KEYFORMAT===void 0){format="identity";}else if(settings.version<5){throw new Error("KEYFORMAT attribute requires version 5 of greater.");}else{format=validateString(attrs.KEYFORMAT);}
if(attrs.KEYFORMATVERSIONS===void 0){versions="1";}else if(settings.version<5){throw new Error("KEYFORMATVERSIONS attribute requires version 5 of greater.");}else{versions=validateKeyFormats(attrs.KEYFORMATVERSIONS);}
settings.encryption.format=format;settings.encryption.formatSettings[format]={method:"AES-128",key:key,iv:iv,formatVersions:versions};break;case"SAMPLE-AES":throw new Error("SAMPLE-AES encryption not supported.");default:throw new Error("Invalid Encryption Method");}}
function parseIndependentSegmentsTag(settings){if(settings.hasIdependent){throw new Error("Duplicate X-INDEPENDENT-SEGMENTS tags.");}
settings.hasIndependent=true;settings.independent=true;}
function parseStartTag(settings,attrs){if(settings.hasStart){throw new Error("Duplicate X-START tags.");}
settings.hasStart=true;if(attrs['TIME-OFFSET']===void 0){throw new Error("Missing TIME-OFFSET Attribute of X-START tag.");}
settings.startOffset=validateSignedFloat(attrs['TIME-OFFSET']);switch(attrs.PRECISE){case"YES":case"NO":settings.startPrecise=attrs.PRECISE;break;default:throw new Error("Invalid value for PRECISE Attribute of X-START tag.");}}
function createIV(num){var zeros="00000000000000000000000000000000",hex=num.toString(16);return zeros.substr(hex.length)+hex;}
function h2b(s){var i,l=s.length,b=new Uint8Array(Math.floor(l/2));for(i=0;i<l;i+=2){b[i/2]=parseInt(s.substr(i,2),16);}
return b.buffer;}
function createSegment(baseUrl,line,settings){var format=settings.encryption.format,encSettings=settings.encryption.formatSettings[format],segment;segment={uri:resolveURL(baseUrl,line),seqNo:settings.sequenceNo,discSeqNo:settings.discontinuitySequence,duration:settings.duration,offset:0,byteLen:NaN,encryption:null}
settings.sequenceNo++;if(settings.hasRange){settings.hasRange=false;if(!settings.hasOffset&&line!==settings.lastByteRange){throw new Error("Missing byte range offset");}
segment.offset=settings.offset;segment.bytelen=settings.rangelen;settings.offset+=settings.rangelen;settings.lastByteRange=line;}else{settings.lastByteRange=null;}
if(encSettings.method==="NONE"){segment.encryption={method:"NONE",key:null,iv:null,format:"identity",formatVersions:"1"};return Promise.resolve(segment);}else{return getKeyPromise(encSettings.key).then(function(keybuffer){segment.encryption={method:encSettings.method,key:keybuffer,iv:h2b(encSettings.iv||createIV(settings.sequenceNo)),format:format,formatVersions:encSettings.formatVersions};return segment;});}}
var head=document.getElementsByTagName('head')[0],base=document.createElement('base'),resolver=document.createElement('a');function resolveURL(base_url,url){var resolved_url;head.appendChild(base);base.href=base_url;resolver.href=url;resolved_url=resolver.href;head.removeChild(base);return resolved_url;}
function getManifest(url){return new Promise(function(resolve,reject){var xhr=new XMLHttpRequest();xhr.addEventListener('load',function(){resolve(this.responseText);});xhr.open('GET',url,true);xhr.send();});}
function M3U8Manifest(text,url){this.url=url;this.segments=[];this.listeners=[];this.refresh();}
M3U8Manifest.prototype.refresh=function(){var that=this,settings;getManifest(this.url).then(function(text){var obj=parse(that.url,text);settings=obj.settings;return obj.segments;}).then(function(segments){var waitFraction=1000;that.segments=segments;that.emit(segments);});};M3U8Manifest.prototype.emit=function(segments){this.listeners.forEach(function(cb){setTimeout(cb.bind(null,segments),0);});};M3U8Manifest.prototype.listen=function(cb){this.listeners.push(cb);};M3U8Manifest.prototype.unlisten=function(cb){var idx=this.listeners.indexOf(cb);if(~idx){this.listeners.splice(idx,1);}};function isMaster(text){return!~text.indexOf('EXTINF');}
function manifestsFromMaster(text,url){return parseMaster(url,text).variants.map(function(variant){var mediaUrl=variant.uri;return new M3U8Manifest(getManifest(mediaUrl),mediaUrl);});}
function fetchHLSManifests(url){return getManifest(url).then(function(text){return isMaster(text)?manifestsFromMaster(text,url):[new M3U8Manifest(text,url)];});}
return fetchHLSManifests;}());var AESDecryptor=(function(){'use strict';function workerFn(){var Rcon=new Uint8Array([0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36]);var sBox=new Uint8Array([0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16]);var sBoxI=new Uint8Array([0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38,0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb,0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87,0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb,0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d,0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e,0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2,0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25,0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16,0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92,0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda,0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84,0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a,0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06,0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02,0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b,0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea,0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73,0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85,0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e,0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89,0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b,0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20,0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4,0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31,0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f,0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d,0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef,0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0,0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61,0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26,0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d]);var mul2=new Uint8Array([0x00,0x02,0x04,0x06,0x08,0x0a,0x0c,0x0e,0x10,0x12,0x14,0x16,0x18,0x1a,0x1c,0x1e,0x20,0x22,0x24,0x26,0x28,0x2a,0x2c,0x2e,0x30,0x32,0x34,0x36,0x38,0x3a,0x3c,0x3e,0x40,0x42,0x44,0x46,0x48,0x4a,0x4c,0x4e,0x50,0x52,0x54,0x56,0x58,0x5a,0x5c,0x5e,0x60,0x62,0x64,0x66,0x68,0x6a,0x6c,0x6e,0x70,0x72,0x74,0x76,0x78,0x7a,0x7c,0x7e,0x80,0x82,0x84,0x86,0x88,0x8a,0x8c,0x8e,0x90,0x92,0x94,0x96,0x98,0x9a,0x9c,0x9e,0xa0,0xa2,0xa4,0xa6,0xa8,0xaa,0xac,0xae,0xb0,0xb2,0xb4,0xb6,0xb8,0xba,0xbc,0xbe,0xc0,0xc2,0xc4,0xc6,0xc8,0xca,0xcc,0xce,0xd0,0xd2,0xd4,0xd6,0xd8,0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xee,0xf0,0xf2,0xf4,0xf6,0xf8,0xfa,0xfc,0xfe,0x1b,0x19,0x1f,0x1d,0x13,0x11,0x17,0x15,0x0b,0x09,0x0f,0x0d,0x03,0x01,0x07,0x05,0x3b,0x39,0x3f,0x3d,0x33,0x31,0x37,0x35,0x2b,0x29,0x2f,0x2d,0x23,0x21,0x27,0x25,0x5b,0x59,0x5f,0x5d,0x53,0x51,0x57,0x55,0x4b,0x49,0x4f,0x4d,0x43,0x41,0x47,0x45,0x7b,0x79,0x7f,0x7d,0x73,0x71,0x77,0x75,0x6b,0x69,0x6f,0x6d,0x63,0x61,0x67,0x65,0x9b,0x99,0x9f,0x9d,0x93,0x91,0x97,0x95,0x8b,0x89,0x8f,0x8d,0x83,0x81,0x87,0x85,0xbb,0xb9,0xbf,0xbd,0xb3,0xb1,0xb7,0xb5,0xab,0xa9,0xaf,0xad,0xa3,0xa1,0xa7,0xa5,0xdb,0xd9,0xdf,0xdd,0xd3,0xd1,0xd7,0xd5,0xcb,0xc9,0xcf,0xcd,0xc3,0xc1,0xc7,0xc5,0xfb,0xf9,0xff,0xfd,0xf3,0xf1,0xf7,0xf5,0xeb,0xe9,0xef,0xed,0xe3,0xe1,0xe7,0xe5]);var mul4=new Uint8Array([0x00,0x04,0x08,0x0c,0x10,0x14,0x18,0x1c,0x20,0x24,0x28,0x2c,0x30,0x34,0x38,0x3c,0x40,0x44,0x48,0x4c,0x50,0x54,0x58,0x5c,0x60,0x64,0x68,0x6c,0x70,0x74,0x78,0x7c,0x80,0x84,0x88,0x8c,0x90,0x94,0x98,0x9c,0xa0,0xa4,0xa8,0xac,0xb0,0xb4,0xb8,0xbc,0xc0,0xc4,0xc8,0xcc,0xd0,0xd4,0xd8,0xdc,0xe0,0xe4,0xe8,0xec,0xf0,0xf4,0xf8,0xfc,0x1b,0x1f,0x13,0x17,0x0b,0x0f,0x03,0x07,0x3b,0x3f,0x33,0x37,0x2b,0x2f,0x23,0x27,0x5b,0x5f,0x53,0x57,0x4b,0x4f,0x43,0x47,0x7b,0x7f,0x73,0x77,0x6b,0x6f,0x63,0x67,0x9b,0x9f,0x93,0x97,0x8b,0x8f,0x83,0x87,0xbb,0xbf,0xb3,0xb7,0xab,0xaf,0xa3,0xa7,0xdb,0xdf,0xd3,0xd7,0xcb,0xcf,0xc3,0xc7,0xfb,0xff,0xf3,0xf7,0xeb,0xef,0xe3,0xe7,0x36,0x32,0x3e,0x3a,0x26,0x22,0x2e,0x2a,0x16,0x12,0x1e,0x1a,0x06,0x02,0x0e,0x0a,0x76,0x72,0x7e,0x7a,0x66,0x62,0x6e,0x6a,0x56,0x52,0x5e,0x5a,0x46,0x42,0x4e,0x4a,0xb6,0xb2,0xbe,0xba,0xa6,0xa2,0xae,0xaa,0x96,0x92,0x9e,0x9a,0x86,0x82,0x8e,0x8a,0xf6,0xf2,0xfe,0xfa,0xe6,0xe2,0xee,0xea,0xd6,0xd2,0xde,0xda,0xc6,0xc2,0xce,0xca,0x2d,0x29,0x25,0x21,0x3d,0x39,0x35,0x31,0x0d,0x09,0x05,0x01,0x1d,0x19,0x15,0x11,0x6d,0x69,0x65,0x61,0x7d,0x79,0x75,0x71,0x4d,0x49,0x45,0x41,0x5d,0x59,0x55,0x51,0xad,0xa9,0xa5,0xa1,0xbd,0xb9,0xb5,0xb1,0x8d,0x89,0x85,0x81,0x9d,0x99,0x95,0x91,0xed,0xe9,0xe5,0xe1,0xfd,0xf9,0xf5,0xf1,0xcd,0xc9,0xc5,0xc1,0xdd,0xd9,0xd5,0xd1]);var mul9=new Uint8Array([0x00,0x09,0x12,0x1b,0x24,0x2d,0x36,0x3f,0x48,0x41,0x5a,0x53,0x6c,0x65,0x7e,0x77,0x90,0x99,0x82,0x8b,0xb4,0xbd,0xa6,0xaf,0xd8,0xd1,0xca,0xc3,0xfc,0xf5,0xee,0xe7,0x3b,0x32,0x29,0x20,0x1f,0x16,0x0d,0x04,0x73,0x7a,0x61,0x68,0x57,0x5e,0x45,0x4c,0xab,0xa2,0xb9,0xb0,0x8f,0x86,0x9d,0x94,0xe3,0xea,0xf1,0xf8,0xc7,0xce,0xd5,0xdc,0x76,0x7f,0x64,0x6d,0x52,0x5b,0x40,0x49,0x3e,0x37,0x2c,0x25,0x1a,0x13,0x08,0x01,0xe6,0xef,0xf4,0xfd,0xc2,0xcb,0xd0,0xd9,0xae,0xa7,0xbc,0xb5,0x8a,0x83,0x98,0x91,0x4d,0x44,0x5f,0x56,0x69,0x60,0x7b,0x72,0x05,0x0c,0x17,0x1e,0x21,0x28,0x33,0x3a,0xdd,0xd4,0xcf,0xc6,0xf9,0xf0,0xeb,0xe2,0x95,0x9c,0x87,0x8e,0xb1,0xb8,0xa3,0xaa,0xec,0xe5,0xfe,0xf7,0xc8,0xc1,0xda,0xd3,0xa4,0xad,0xb6,0xbf,0x80,0x89,0x92,0x9b,0x7c,0x75,0x6e,0x67,0x58,0x51,0x4a,0x43,0x34,0x3d,0x26,0x2f,0x10,0x19,0x02,0x0b,0xd7,0xde,0xc5,0xcc,0xf3,0xfa,0xe1,0xe8,0x9f,0x96,0x8d,0x84,0xbb,0xb2,0xa9,0xa0,0x47,0x4e,0x55,0x5c,0x63,0x6a,0x71,0x78,0x0f,0x06,0x1d,0x14,0x2b,0x22,0x39,0x30,0x9a,0x93,0x88,0x81,0xbe,0xb7,0xac,0xa5,0xd2,0xdb,0xc0,0xc9,0xf6,0xff,0xe4,0xed,0x0a,0x03,0x18,0x11,0x2e,0x27,0x3c,0x35,0x42,0x4b,0x50,0x59,0x66,0x6f,0x74,0x7d,0xa1,0xa8,0xb3,0xba,0x85,0x8c,0x97,0x9e,0xe9,0xe0,0xfb,0xf2,0xcd,0xc4,0xdf,0xd6,0x31,0x38,0x23,0x2a,0x15,0x1c,0x07,0x0e,0x79,0x70,0x6b,0x62,0x5d,0x54,0x4f,0x46]);function InvSubShift(bytes){var t1,t2;bytes[0]=sBoxI[bytes[0]];bytes[1]=sBoxI[bytes[1]];bytes[2]=sBoxI[bytes[2]];bytes[3]=sBoxI[bytes[3]];t1=bytes[7];bytes[7]=sBoxI[bytes[6]];bytes[6]=sBoxI[bytes[5]];bytes[5]=sBoxI[bytes[4]];bytes[4]=sBoxI[t1];t1=bytes[8];t2=bytes[9];bytes[8]=sBoxI[bytes[10]];bytes[9]=sBoxI[bytes[11]];bytes[10]=sBoxI[t1];bytes[11]=sBoxI[t2];t1=bytes[12];bytes[12]=sBoxI[bytes[13]];bytes[13]=sBoxI[bytes[14]];bytes[14]=sBoxI[bytes[15]];bytes[15]=sBoxI[t1];}
function InvMixColumns(s){var s0,s1,s2,s3,t0,t1,t2,t3,t02,t13,t,b,c,t01,t12,t23,t30;s0=s[0];s1=s[1];s2=s[2];s3=s[3];for(c=0;c<4;c++){t0=s0[c];t1=s1[c];t2=s2[c];t3=s3[c];t01=t0^t1;t12=t1^t2;t23=t2^t3;t30=t3^t0;t02=mul4[t0^t2];t13=mul4[t1^t3];t=mul9[t01^t23];s0[c]=t^t0^t02^mul2[t01];s1[c]=t^t1^t13^mul2[t12];s2[c]=t^t2^t02^mul2[t23];s3[c]=t^t3^t13^mul2[t30];}}
function AddRoundKey(words,ks,i){var j;for(j=0;j<4;j++){words[j]^=ks[i+j];}}
function TransposeBlock(output,oo,input,io){var i,j;for(i=0;i<4;i++){for(j=i;j<16;j+=4){output[oo+j]=input[io++];}}}
function keyExpansion(key){var i,wi,wl,w4,w=[],bytes=new Uint8Array(176),words=new Uint32Array(bytes.buffer),temp=new Uint8Array(16);for(i=0;i<176;i+=4){w.push(bytes.subarray(i,i+4));}
bytes.set(key);wi=w[3];for(i=4;i<44;i++){wl=wi;wi=w[i];w4=w[i-4];if(i%4==0){wi[0]=w4[0]^sBox[wl[1]]^Rcon[i/4];wi[1]=w4[1]^sBox[wl[2]];wi[2]=w4[2]^sBox[wl[3]];wi[3]=w4[3]^sBox[wl[0]];}else{words[i]=words[i-4]^words[i-1];}}
for(i=0;i<176;i+=16){TransposeBlock(temp,0,bytes,i);bytes.set(temp,i);}
return words;}
var stateBytes=new Uint8Array(16);var stateWords=new Uint32Array(stateBytes.buffer);var stateMatrix=[stateBytes.subarray(0,4),stateBytes.subarray(4,8),stateBytes.subarray(8,12),stateBytes.subarray(12,16)];function decipher(input,io,output,oo,ks){var i;TransposeBlock(stateBytes,0,input,io);AddRoundKey(stateWords,ks,40);for(i=36;i>=4;i-=4){InvSubShift(stateBytes);AddRoundKey(stateWords,ks,i);InvMixColumns(stateMatrix);}
InvSubShift(stateBytes);AddRoundKey(stateWords,ks,0);TransposeBlock(output,oo,stateBytes,0);}
var prev32=new Uint32Array(4),output=new Uint8Array(16),output32=new Uint32Array(output.buffer);function decryptCBC(cipher,ks,iv){var i,j,k,wlen,cipher32;wlen=cipher.length/4;cipher32=new Uint32Array(cipher.buffer,cipher.byteOffset);prev32.set(iv);for(i=0,k=0;i<wlen;k+=16){decipher(cipher,k,output,0,ks);for(j=0;j<4;j++,i++){output32[j]^=prev32[j];prev32[j]=cipher32[i];cipher32[i]=output32[j];}}}
var iv=new Uint32Array(4);var ks=keyExpansion(new Uint8Array(16));self.addEventListener('message',function(e){"use strict";var bytes,buffer,len,data=e.data;if(data.iv){iv=data.iv;}
if(data.key){ks=keyExpansion(data.key);}
if(!data.cipher){return;}
buffer=data.cipher;bytes=new Uint8Array(buffer,data.offset);decryptCBC(bytes,ks,iv);len=bytes.length;len-=bytes[len-1];self.postMessage({plain:buffer,job:data.job,len:len,offset:data.offset,},[buffer]);},false);}
var blobURL=URL.createObjectURL(new Blob(['('+workerFn.toString()+')();'],{type:"text/javascript"}));function AESDecryptor(args){var worker=new Worker(blobURL),job=0,jobs={},key,iv;worker.addEventListener("message",function(e){var data=e.data,job=data.job;jobs[job](new Uint8Array(data.plain,data.offset,data.len));delete jobs[job];},false);this.worker=worker;this.current_key=new Uint8Array(16);if(args){this.config(args);}
this.decrypt=function(cipher){return new Promise(function(resolve,reject){if(cipher.byteLength%4!==0){throw new Error("Cipher text must be a multiple of the block size (16 bytes).");}
worker.postMessage({job:job,offset:cipher.byteOffset,cipher:cipher.buffer},[cipher.buffer]);jobs[job++]=resolve;});};}
function keys_differ(a,b){var i;if(!a){return false;}
for(i=0;i<16;i++){if(a[i]!==b[i]){return true;}}
return false;}
AESDecryptor.prototype.config=function(args){var key,iv;if(args.key instanceof Uint8Array)key=args.key;else if(args.key instanceof ArrayBuffer)key=new Uint8Array(args.key,0,16);else if(args.key.buffer instanceof ArrayBuffer)key=new Uint8Array(args.key.buffer,args.key.byteOffset,16);if(!keys_differ(key,this.current_key)){key=void 0;}
if(key){this.current_key=key;}
if(args.iv instanceof Uint32Array)iv=args.iv;else if(args.iv instanceof ArrayBuffer)iv=new Uint32Array(args.iv,0,4);else if(args.iv.buffer instanceof ArrayBuffer)iv=new Uint32Array(args.iv.buffer,args.iv.byteOffset,4);if(key||iv){this.worker.postMessage({key:key,iv:iv});}};return AESDecryptor;})();var TSDemuxer=(function(){"use strict";function workerFn(){function Stream(){this.program=0xffff;this.id=0;this.type=0xff;this.stream_id=0;this.content_type=0;this.dts=0;this.has_dts=false;this.first_pts=0;this.last_pts=0;this.has_pts=false;this.frame_ticks=0;this.frame_num=0;this.packets=[];this.byteLength=0;this.payload=null;Object.defineProperties(this,{fps:{get:function(){return 90000/this.frame_ticks;},enumerable:true},length:{get:function(){return(this.last_pts+this.frame_ticks-this.first_pts)/90000;},enumerable:true}});}
Stream.prototype.finalize=function(){var packet_data,offset=0,payload=this.payload;if(payload===null){return;}
if(payload.buffer.length===1){packet_data=payload.buffer[0];}else{packet_data=new Uint8Array(payload.buflen);payload.buffer.forEach(function(b){packet_data.set(b,offset);offset+=b.byteLength;});}
this.packets.push({pts:payload.pts,dts:payload.dts,frame_ticks:payload.frame_ticks,data:packet_data});};Stream.prototype.write=function(mem,ptr,len,pstart){var packet_data,payload=this.payload,offset=0;if(pstart||payload===null){this.finalize();this.payload={buffer:[new Uint8Array(mem.buffer,ptr,len)],buflen:len,pts:this.last_pts,dts:this.dts,frame_ticks:this.frame_ticks};}else{payload.buffer.push(new Uint8Array(mem.buffer,ptr,len));payload.buflen+=len;}
this.byteLength+=len;};var pmt={mem:new DataView(new ArrayBuffer(512)),ptr:0,len:0,offset:0,reset:function(l){this.len=l;this.offset=0;}},stream_type={unknown:0,audio:1,video:2,data:0,mpeg2_video:1,h264_video:2,vc1_video:3,ac3_audio:4,mpeg2_audio:5,lpcm_audio:6,aac_audio:7};function get_stream(pids,pid){if(!pids.hasOwnProperty(pid)){pids[pid]=new Stream();}
return pids[pid];}
function get_stream_type(type_id){switch(type_id){case 0x01:case 0x02:return stream_type.mpeg2_video;case 0x80:return stream_type.mpeg2_video;case 0x1b:return stream_type.h264_video;case 0xea:return stream_type.vc1_video;case 0x81:case 0x06:return stream_type.ac3_audio;case 0x03:case 0x04:return stream_type.mpeg2_audio;case 0x0f:return stream_type.aac_audio;}
return stream_type.data;}
function get_media_type(type_id){var tlist=[stream_type.unknown,stream_type.video,stream_type.video,stream_type.video,stream_type.audio,stream_type.audio,stream_type.audio,stream_type.audio];return tlist[get_stream_type(type_id)];}
function decode_ts(mem,p){return((mem.getUint8(p)&0xe)<<29)|((mem.getUint8(p+1)&0xff)<<22)|((mem.getUint8(p+2)&0xfe)<<14)|((mem.getUint8(p+3)&0xff)<<7)|((mem.getUint8(p+4)&0xfe)>>1);}
function decode_pat(mem,ptr,len,pids,pstart){var s,i,n,l,pid,program;if(pstart){if(len<1){return 6;}
ptr+=1;len-=1;}
if(mem.getUint8(ptr)!==0x00){return 0;}
if(len<8){return 7;}
l=mem.getUint16(ptr+1);if((l&0xb000)!==0xb000){return 8;}
l&=0x0fff;len-=3;if(l>len){return 9;}
len-=5;ptr+=8;l-=5+4;if(l%4){return 10;}
n=l/4;for(i=0;i<n;i++){program=mem.getUint16(ptr);pid=mem.getUint16(ptr+2);if((pid&0xe000)!==0xe000){return 11;}
pid&=0x1fff;ptr+=4;s=get_stream(pids,pid);s.program=program;s.type=0xff;}
return 0;}
function memcpy(dstm,dstp,srcm,srcp,len){(new Uint8Array(dstm.buffer,dstp,len)).set(new Uint8Array(srcm.buffer,srcp,len));}
function decode_pmt(mem,ptr,len,pids,s,pstart){var ss,ll,l,n,pid,type;if(pstart){if(len<1){return 12;}
ptr+=1;len-=1;if(mem.getUint8(ptr)!==0x02){return 0;}
if(len<12){return 13;}
l=mem.getUint16(ptr+1);if((l&0x3000)!==0x3000){return 14;}
l=(l&0x0fff)+3;if(l>512){return 15;}
pmt.reset(l);ll=len>l?l:len;memcpy(pmt.mem,pmt.ptr,mem,ptr,ll);pmt.offset+=ll;if(pmt.offset<pmt.len){return 0;}}else{if(!pmt.offset){return 16;}
l=pmt.len-pmt.offset;ll=len>l?l:len;memcpy(pmt.mem,pmt.ptr+pmt.offset,mem,ptr,ll);pmt.offset+=ll;if(pmt.offset<pmt.len){return 0;}}
mem=pmt.mem;ptr=pmt.ptr;l=pmt.len;n=(mem.getUint16(ptr+10)&0x0fff)+12;if(n>l){return 17;}
ptr+=n;len-=n;l-=n+4;while(l){if(l<5){return 18;}
type=mem.getUint8(ptr);pid=mem.getUint16(ptr+1);if((pid&0xe000)!==0xe000){return 19;}
pid&=0x1fff;ll=(mem.getUint16(ptr+3)&0x0fff)+5;if(ll>l){return 20;}
ptr+=ll;l-=ll;ss=get_stream(pids,pid);if(ss.program!==s.program||ss.type!==type){ss.program=s.program;ss.type=type;ss.id=++s.id;ss.content_type=get_media_type(type);}}
return 0;}
function decode_pes(mem,ptr,len,s,pstart){var l,pts,dts,hlen,bitmap,stream_id;start:{if(!pstart){break start;}
if(len<6){return 21;}
if(mem.getUint16(ptr)!==0||mem.getUint8(ptr+2)!==1){return 22;}
stream_id=mem.getUint8(ptr+3);l=mem.getUint16(ptr+4);ptr+=6;len-=6;if((stream_id<0xbd||stream_id>0xfe)||(stream_id>0xbf&&stream_id<0xc0)||(stream_id>0xdf&&stream_id<0xe0)||(stream_id>0xef&&stream_id<0xfa)){s.stream_id=0;break start;}
if(len<3){return 23;}
bitmap=mem.getUint8(ptr+1);hlen=mem.getUint8(ptr+2)+3;if(len<hlen){return 24;}
if(l>0){l-=hlen;}
switch(bitmap&0xc0){case 0x80:if(hlen<8){break;}
pts=decode_ts(mem,ptr+3);if(s.has_dts&&pts!==s.dts){s.frame_ticks=pts-s.dts;}
if(pts>s.last_pts||!s.has_pts){s.last_pts=pts;}
if(s.first_pts===0&&s.frame_num===(s.content_type===stream_type.video?1:0)){s.first_pts=pts;}
s.dts=pts;s.has_dts=true;s.has_pts=true;break;case 0xc0:if(hlen<13){break;}
pts=decode_ts(mem,ptr+3);dts=decode_ts(mem,ptr+8);if(s.has_dts&&dts>s.dts){s.frame_ticks=dts-s.dts;}
if(pts>s.last_pts||!s.has_pts){s.last_pts=pts;}
if(s.first_pts===0&&s.frame_num===(s.content_type===stream_type.video?1:0)){s.first_pts=pts;}
s.dts=dts;s.has_dts=true;s.has_pts=true;break;}
ptr+=hlen;len-=hlen;s.stream_id=stream_id;s.frame_num++;}
if(s.stream_id&&s.content_type!==stream_type.unknown){s.write(mem,ptr,len,pstart);}
return 0;}
function demux_packet(mem,ptr,len,pids){var s,l,pid,flags,payload_start;if(mem.getUint8(ptr)!==0x47){return 2;}
pid=mem.getUint16(ptr+1);flags=mem.getUint8(ptr+3);if(pid&0x8000){return 3;}
if(flags&0xc0){return 4;}
payload_start=pid&0x4000;pid&=0x1fff;if(pid===0x1fff||!(flags&0x10)){return 0;}
ptr+=4;len-=4;if(flags&0x20){l=mem.getUint8(ptr)+1;if(l>len){return 5;}
ptr+=l;len-=l;}
if(!pid){return decode_pat(mem,ptr,len,pids,payload_start);}
s=get_stream(pids,pid);if(s.program===0xffff){return 0;}
if(s.type===0xff){return decode_pmt(mem,ptr,len,pids,s,payload_start);}
return decode_pes(mem,ptr,len,s,payload_start);}
function demux_file(buffer,ptr,len,pids){var length,n,l=188,mem=new DataView(buffer);for(ptr=0;true;ptr+=l){length=len-ptr;if(!length){return 0;}
if(length<l){return 1;}
n=demux_packet(mem,ptr,l,pids);if(n){return n;}}
return 0;}
function pids2streams(pids){var streams={},blist=[];Object.keys(pids).forEach(function(id){var s=pids[id];s.finalize();if(s.byteLength===0){return;}
streams[s.stream_id]={type:s.type,packets:s.packets,byteLength:s.byteLength,length:s.length};s.packets.forEach(function(p){if(blist.indexOf(p.data.buffer)>-1){return;}
blist.push(p.data.buffer);});});return{streams:streams,blist:blist};}
self.addEventListener('message',function(e){var data=e.data,pids={},n,sdata;n=demux_file(data.buffer,data.offset,data.len,pids);if(n===0){sdata=pids2streams(pids);postMessage({n:0,job:data.job,streams:sdata.streams,buffers:sdata.blist},sdata.blist);}else{postMessage({n:n,job:data.job});}},false);}
var blobURL=URL.createObjectURL(new Blob(['('+workerFn.toString()+')();'],{type:"text/javascript"}));var errcodes=["Error 1: Incomplete TS Packet","Error 2: Invalid Sync Byte","Error 3: Transport Error","Error 4: Packet Scrambled","Error 5: Adaptation Field Overflows File Length","Error 6: Incomplete PES Packet (Possibly PAT)","Error 7: Incomplete PAT","Error 8: ???","Error 9: PAT Overflows File Length","Error 10: PAT Body Not a Multiple of 4 Bytes","Error 11: ???","Error 12: Incomplete PES Packet (Possibly PMT)","Error 13: Incomplete PMT","Error 14: ???","Error 15: ???","Error 16: ???","Error 17: ???","Error 18: ???","Error 19: ???","Error 20: ???","Error 21: Incomplete PES Packet Header","Error 22: Invalid PES Header","Error 23: PES Packet Not Long Enough for Extended Header","Error 24: PES Header Overflows File Length"];function TSDemuxer(){var worker=new Worker(blobURL),job=0,jobs={};worker.addEventListener("message",function(e){var data=e.data,job=data.job;data.n===0?jobs[job].resolve(data):jobs[job].reject(new Error(errcodes[data.n-1]));delete jobs[job];},false);this.process=function(buffer,offset,len){if(buffer instanceof ArrayBuffer){offset=offset||0;len=len||buffer.byteLength;}else{offset=buffer.byteOffset;len=buffer.byteLength;buffer=buffer.buffer;}
return new Promise(function(resolve,reject){worker.postMessage({buffer:buffer,offset:offset,len:len,job:job},[buffer]);jobs[job++]={resolve:resolve,reject:reject};});};}
return TSDemuxer;}());var HLSPlayer=(function(){'use strict';function nextFrame(player,video){var scale,w,h,cw=player.canvas.width,ch=player.canvas.height,vw=video.videoWidth,vh=video.videoHeight;scale=Math.min(cw/vw,ch/vh);w=vw*scale;h=vh*scale;player.ctx.drawImage(video,(cw-w)/2,(ch-h)/2,w,h);if(!(player.seeking||video.paused||video.ended)){requestAnimationFrame(function(){nextFrame(player,video);});}}
function getSegment(player,index){var seg,p;if(index>=player.segments.length){return Promise.reject(null);}
if(player.videos[index]){return player.videos[index];}
p=new Promise(function(resolve,reject){player.resolvers[index]=resolve;});player.videos[index]=p;seg=player.segments[index];(new Promise(function(resolve){var xhr=new XMLHttpRequest();xhr.responseType="arraybuffer";xhr.addEventListener('load',function(){resolve(this.response);},false);xhr.open("GET",seg.uri,true);xhr.send();})).then(function(arrbuffer){var data=new Uint8Array(arrbuffer);if(seg.encryption.method!=="AES-128"){return data;}
player.decryptor.config({key:seg.encryption.key,iv:seg.encryption.iv});return player.decryptor.decrypt(data);}).then(function(data){return player.demuxer.process(data);}).then(function(packet_data){player.worker.postMessage({streams:packet_data.streams,index:index},packet_data.buffers);});return p;}
function addVideo(event){var that=this,data=event.data,index=data.index,canvas=this.canvas,ctx=this.ctx,base=this.baseTimes[index],video=document.createElement('video');video.addEventListener('loadedmetadata',function(){that.loaded[index]=true;that.resolvers[index](video);});video.addEventListener('play',function(){that.index=index;that.ended=false;video.playbackRate=that.playbackRate;video.volume=that.volume;video.muted=that.muted;nextFrame(that,this);if(!that.loaded[index+1]){getSegment(that,index+1).then(function(next){video.addEventListener('ended',function(){if(!that.paused){next.play();}},false);},function(){video.addEventListener('ended',function(){that.currentTime=0;that.ended=true;that.paused=true;that.emit('ended',null);},false);});}},false);video.addEventListener('timeupdate',function(){if(that.seeking){return;}
that.setTime(base+video.currentTime);that.emit('timeupdate',null);},false);var a=document.createElement('a');a.href=data.url;a.textContent="Download";document.body.appendChild(a);video.src=data.url;video.load();}
function HLSPlayer(canvas,manifestURL){var that=this,currentTime=0,playbackRate=1,volume=1,muted=false,worker=new Worker(remuxWorkerURL);worker.addEventListener('message',addVideo.bind(this),false);this.worker=worker;this.demuxer=new TSDemuxer();this.handlers=new Map();this.index=0;this.canvas=canvas;this.ctx=canvas.getContext('2d');this.decryptor=new AESDecryptor();this.resolvers={};this.videos={};this.loaded={};this.segments=[];this.baseTimes=[];this.seeking=false;this.ended=false;this.paused=true;this.duration=0;this.readyState=0;Object.defineProperties(this,{setTime:{value:function(t){currentTime=t;}},currentTime:{get:function(){return currentTime;},set:function(t){var that=this,i,d,segs=this.segments,len=segs.length;t=+t||0;if(currentTime===t){return currentTime;}
currentTime=t;this.seeking=true;this.ended=false;end:{for(i=0;i<len;i++){d=segs[i].duration;if(d>t){break end;}
t-=d;}
t=d;i=len-1;currentTime=d;this.ended=true;this.paused=true;}
if(this.index===i){getSegment(this,this.index).then(function(video){video.currentTime=t;});}else{if(!this.paused){getSegment(this,this.index).then(function(video){video.pause();});}
this.index=i;getSegment(this,i).then(function(video){that.seeking=false;if(!that.paused){video.play();video.currentTime=t;}else{video.currentTime=t;nextFrame(that,video);}});}
that.emit('seek',null);return currentTime;}},volume:{get:function(){return volume;},set:function(v){v=Math.min(Math.max(0,+v||0),1);if(volume===v){return volume;}
volume=v;if(!this.paused){getSegment(this,this.index).then(function(video){video.volume=v;});}
return volume;}},muted:{get:function(){return muted;},set:function(m){m=!!m;if(muted===m){return muted;}
muted=m;if(!this.paused){getSegment(this,this.index).then(function(video){video.muted=m;});}
return muted;}},playbackRate:{get:function(){return playbackRate;},set:function(r){r=Math.max(0,+r||0);if(playbackRate===r){return playbackRate;}
playbackRate=r;if(!this.paused){getSegment(this,this.index).then(function(video){video.playbackRate=r;});}
return playbackRate;}}});fetchHLSManifests(manifestURL).then(function(mlist){if(mlist.length===0){throw new Error("No Playlists Provided");}
mlist[0].listen(function(segments){var times=[],b=0;segments.forEach(function(s){times.push(b);b+=s.duration;});that.baseTimes=times;that.segments=segments;that.duration=b;getSegment(that,0).then(function(video){nextFrame(that,video);that.readyState=4;that.emit('ready',null);});});});}
HLSPlayer.prototype.emit=function(event,data){this.canvas.dispatchEvent(new CustomEvent(event,{bubbles:true,detail:data}));};HLSPlayer.prototype.addEventListener=function(event,cb,capture){var bound=cb.bind(this);this.handlers.set(cb,{c:!!capture,f:bound});this.canvas.addEventListener(event,bound,!!capture);};HLSPlayer.prototype.removeEventListener=function(event,cb,capture){var o=this.handlers.get(cb);this.handlers.delete(cb);this.canvas.removeEventListener(event,o.f,o.c);};HLSPlayer.prototype.play=function(){var that=this;if(!this.paused){return;}
this.paused=false;this.emit('play',null);getSegment(this,this.index).then(function(video){if(that.paused){return;}
video.play();});}
HLSPlayer.prototype.pause=function(){var that=this;if(this.paused){return;}
this.paused=true;this.emit('pause',null);getSegment(this,this.index).then(function(video){if(!that.paused){return;}
video.pause();});}
return HLSPlayer;})();return HLSPlayer;})();